
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://lmgfzqaewmenlmawdrxn.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImxtZ2Z6cWFld21lbmxtYXdkcnhuIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk3MzI1MjEsImV4cCI6MjA1NTMwODUyMX0.rd3pwYXm6Ka1Twr4rZHlRQvQPc3ZjPqbI0ZSXSwNMq8";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    storage: localStorage,
  },
  global: {
    fetch: (...args) => {
      return fetch(...args).catch(err => {
        console.error("Supabase fetch error:", err);
        throw err;
      });
    }
  }
});

// Функция для проверки подключения к Supabase
export const testSupabaseConnection = async () => {
  try {
    // Простой запрос для проверки соединения
    const { data, error } = await supabase.from('profiles').select('count').limit(1);
    
    if (error) {
      console.error("Supabase connection test error:", error);
      return { success: false, message: `Ошибка подключения: ${error.message}` };
    }
    
    return { success: true, message: "Подключение к базе данных установлено" };
  } catch (err) {
    console.error("Failed to connect to Supabase:", err);
    return { success: false, message: `Ошибка подключения: ${err.message}` };
  }
};
